{"version":3,"sources":["reducers/types/types.js","reducers/authReducer.js","reducers/herosReducer.js","store/store.js","reducers/actions/auth.js","services/services.js","components/auth/LoginScreen.js","reducers/actions/heroes.js","components/ui/NavApp.js","components/cards/HeroScreen.js","components/cards/Card.js","components/cards/MyCards.js","components/ui/SearchScreen.js","components/home/TeamApp.js","components/helpers/stackStats.js","components/home/HomeScreen.js","routers/DashboardApp.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","components/HeroesApp.js","index.js"],"names":["types","initialState","JSON","parse","localStorage","getItem","logged","teamHero","showHero","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","type","payload","heroes","filteredHeroes","filter","hero","enhancer","applyMiddleware","thunk","store","createStore","login","token","action","setItem","stringify","authRequest","method","values","a","axios","post","process","response","console","log","LoginScreen","useState","error","setError","isLoading","setIsLoading","dispatch","useDispatch","push","useHistory","initialValues","email","password","onSubmit","data","validate","length","test","handleChange","handleBlur","handleSubmit","errors","touched","className","htmlFor","autoComplete","id","name","value","placeholder","onBlur","onChange","class","role","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","heroesAddTeam","heroe","team","align","biography","alignment","Swal","fire","icon","title","text","NavApp","to","onClick","removeItem","logout","HeroScreen","useSelector","appearance","work","image","weightHero","weight","heightHero","height","aliasesHero","aliases","eyesHero","hairHero","style","width","src","url","alt","map","alias","base","Card","conditional","numberTeam","size","setSize","useEffect","showHeroData","removeHeroData","MyCards","lengthTeam","index","SearchScreen","heroesList","setHeroesList","searchText","aria-label","e","searchName","toLowerCase","get","then","res","catch","handleInputChange","target","results","TeamApp","inOrder","reducer","previousValue","currentValue","parseInt","powerstats","intelligence","reduce","combat","durability","power","strength","stackStats","sort","b","stat","HomeScreen","undefined","DashboardApp","exact","path","component","PrivateRoute","isAuth","Component","rest","props","PublicRoute","AppRouter","basename","HeroesApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65084238.chunk.js","sourcesContent":["export const types = {\r\n    LOG_IN: '[Auth] Login',\r\n    LOG_OUT: '[Auth] Logout',\r\n    ADD_DATA: '[Heroes] Add Data',\r\n    SHOW_HERO: '[Heroes] Show Hero',\r\n    ADD_HERO_ERROR: '[Heroes] Add Error',\r\n    REMOVE: '[Heroes] Remove',\r\n}\r\n","import { types } from \"./types/types\";\r\n\r\nconst theState = () => {\r\n    if(JSON.parse(localStorage.getItem(\"token\"))){\r\n        return { logged: true}\r\n    }else{\r\n        return { logged: false }\r\n    }\r\n}\r\n\r\nconst initialState = theState()\r\n\r\nexport const authReducer = (state = initialState, { type, payload } ) =>{\r\n    switch (type) {\r\n        case types.LOG_IN:\r\n            return {\r\n                logged: payload\r\n            }\r\n        case types.LOG_OUT:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"./types/types\";\r\n\r\nconst initialState = { teamHero: [], showHero:{} }\r\n\r\nexport const heroesListReducer = ( state = initialState , { type, payload } ) =>{\r\n    switch (type) {\r\n        case types.ADD_DATA:\r\n            return {\r\n                ...state,\r\n                teamHero: [...state.teamHero, payload],\r\n            }\r\n        case types.REMOVE:{\r\n            const { teamHero } = state;\r\n            const filteredHeroes = teamHero.filter( hero =>{return hero !== payload})\r\n                return {\r\n                    ...state,\r\n                    teamHero: [...filteredHeroes]\r\n                }\r\n            }\r\n        case types.SHOW_HERO:\r\n            return{\r\n                ...state,\r\n                showHero: payload\r\n            }\r\n        case types.ADD_HERO_ERROR:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { heroesListReducer } from \"../reducers/herosReducer\";\r\n\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    heroes: heroesListReducer,\r\n})\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk))\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    enhancer\r\n  );\r\n","import { types } from \"../types/types\"\r\n\r\n\r\nexport const login = (token) => {\r\n    const action = {\r\n        type: types.LOG_IN,\r\n        payload: true\r\n    };\r\n    localStorage.setItem(\"token\", JSON.stringify(token));\r\n    return action;\r\n}\r\n\r\nexport const logout = () => {\r\n    const action = {\r\n        type: types.LOG_OUT,\r\n        payload: false\r\n    };\r\n    localStorage.removeItem(\"token\");\r\n    return action;\r\n}","import axios from \"axios\"\r\n\r\nconst baseUrl = process.env.REACT_APP_LOGIN\r\n\r\nexport const authRequest = async(method, values) =>{\r\n    try {\r\n        const response = await axios.post(`${baseUrl}${method}`, values)\r\n        return response;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport { useHistory } from \"react-router\";\r\nimport { login } from \"../../reducers/actions/auth\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authRequest } from \"../../services/services\";\r\n\r\nexport const LoginScreen = () => {\r\n  const [error, setError] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const { push } = useHistory();\r\n\r\n  const handleValues = (values) => {\r\n    let error = {};\r\n    if (!values.email) {\r\n      error.email = \"Please complete the space\";\r\n    } else if (values.email.length < 2) {\r\n      error.email = \"Email too short\";\r\n    } else if (\r\n      !/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(values.email)\r\n    ) {\r\n      error.email = \"The email can't contains spaces and simbols\";\r\n    }\r\n    if (!values.password) {\r\n      error.password = \"Please complete the space\";\r\n    } else if (values.password.length < 1) {\r\n      error.password = \"password too short\";\r\n    } else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(values.password)) {\r\n      error.password = \"The password can't contains simbols and numbers\";\r\n    }\r\n    return error;\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        password: \"\",\r\n      }}\r\n      onSubmit={async (values) => {\r\n        setIsLoading(true);\r\n        try {\r\n          const { data } = await authRequest(\"login\", values);\r\n          if (data.token) {\r\n            dispatch(login(data));\r\n            push(\"/home\");\r\n            setIsLoading(false);\r\n          } else {\r\n            setError(true);\r\n            setIsLoading(false);\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          setError(true);\r\n          setIsLoading(false);\r\n        }\r\n      }}\r\n      validate={handleValues}\r\n    >\r\n      {({\r\n        values,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        errors,\r\n        touched,\r\n      }) => (\r\n        <form\r\n          className=\"auth d-flex flex-column justify-content-center align-items-center\"\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <div className=\"container w-50 rounded-3 brightGrey from__container\">\r\n            <div className=\"mb-3 row\">\r\n              <label\r\n                htmlFor=\"staticEmail\"\r\n                className=\"col-12 col-form-label text-orange brightGrey\"\r\n              >\r\n                Email*\r\n              </label>\r\n              <div className=\"col-12 brightGrey\">\r\n                <input\r\n                  autoComplete=\"off\"\r\n                  className=\"form-control bg-dark text-light mb-3 brightGrey\"\r\n                  id=\"staticEmail\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  type=\"text\"\r\n                  placeholder=\"email@email.com\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                />\r\n                {touched.email && errors.email && (\r\n                  <h1 className=\"fs-6 text-danger brightGrey\">\r\n                    {errors.email}\r\n                  </h1>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"mb-3 row\">\r\n              <label\r\n                htmlFor=\"inputPassword\"\r\n                className=\"col-12 col-form-label text-orange brightGrey\"\r\n              >\r\n                Password*\r\n              </label>\r\n              <div className=\"col-12 brightGrey\">\r\n                <input\r\n                  autoComplete=\"off\"\r\n                  className=\"form-control bg-dark text-light mb-3\"\r\n                  name=\"password\"\r\n                  id=\"inputPassword\"\r\n                  value={values.password}\r\n                  type=\"password\"\r\n                  placeholder=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                />\r\n                {touched.password && errors.password && (\r\n                  <h1 className=\"fs-6 text-danger brightGrey\">\r\n                    {errors.password}\r\n                  </h1>\r\n                )}\r\n                {error && (\r\n                  <h1 className=\"fs-6 text-danger brightGrey\">\r\n                    Password or email wrong\r\n                  </h1>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"row button__container brightGrey p-5\">\r\n              {isLoading ? (\r\n                <div class=\"spinner-border text-danger m-auto\" role=\"status\">\r\n                  <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n              ) : (\r\n                <button\r\n                  className=\"btn btn-red-orange col-12 m-auto w-50\"\r\n                  type=\"submit\"\r\n                >\r\n                  Login\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion mt-4\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\">\r\n              <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <div\r\n                  className=\"accordion-button collapsed\"\r\n                  data-bs-toggle=\"collapse\"\r\n                  data-bs-target=\"#collapseOne\"\r\n                  aria-expanded=\"true\"\r\n                  aria-controls=\"collapseOne\"\r\n                >\r\n                  Want to met inside? Click me!\r\n                </div>\r\n              </h2>\r\n              <div\r\n                id=\"collapseOne\"\r\n                className=\"accordion-collapse collapse\"\r\n                aria-labelledby=\"headingOne\"\r\n                data-bs-parent=\"#accordionExample\"\r\n              >\r\n                <div className=\"accordion-body\">\r\n                  <h1 className=\"fs-6 help-text\">USER: challenge@alkemy.org</h1>\r\n                  <h1 className=\"fs-6 help-text\">PASSWORD: react</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n","import Swal from \"sweetalert2\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const heroesAddTeam = ( heroe, team) => {\r\n    const [ hero ] = team.filter(hero =>{ return hero === heroe });\r\n    const  align  = team.filter(hero =>{ return hero.biography.alignment === heroe.biography.alignment })\r\n\r\n    if( hero === heroe ){\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: 'You already have this character',\r\n        })\r\n        return { type: types.ADD_HERO_ERROR }\r\n    }else if( team.length === 6 ){\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: 'You already have 6 characters',\r\n        })\r\n        return { type: types.ADD_HERO_ERROR }\r\n    }else if( align.length === 3 ) {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: 'you already have 3 characters with this align',\r\n        })\r\n        return { type: types.ADD_HERO_ERROR }\r\n    }else{\r\n        return {\r\n            type: types.ADD_DATA,\r\n            payload: heroe\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const showHeroData = ( data ) =>({\r\n    type: types.SHOW_HERO,\r\n    payload: data\r\n})\r\n\r\nexport const removeHeroData = ( data ) =>({\r\n    type: types.REMOVE,\r\n    payload: data\r\n})\r\n\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { logout } from '../../reducers/actions/auth';\r\n\r\nexport const NavApp = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg nav__container\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"navbar-brand\">\r\n                        <Link to=\"/home\" className=\"navbar-brand nav__item\" >\r\n                            <i className=\"fas fa-mask navbar-brand nav__item\" />Home\r\n                        </Link>\r\n                    </div>\r\n                    <Link to=\"/auth\" className=\"btn btn-red-orange\" onClick={ handleLogout }>Logout</Link>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { heroesAddTeam } from '../../reducers/actions/heroes';\r\nimport { NavApp } from '../ui/NavApp';\r\n\r\nexport const HeroScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const team = useSelector(state => state.heroes.teamHero);\r\n    const state = useSelector(state => state.heroes.showHero);\r\n    const { appearance, biography, name, work, image }=state;\r\n\r\n    const weightHero = appearance.weight[1];\r\n    const heightHero = appearance.height[1];\r\n    const aliasesHero = biography.aliases;\r\n    const eyesHero = appearance['eye-color'];\r\n    const hairHero = appearance['hair-color'];\r\n\r\n    const handleAddHero = () => {\r\n        dispatch(heroesAddTeam(state, team))\r\n    }\r\n    return (\r\n        <>\r\n            <NavApp />\r\n            <div className=\"container\">\r\n                <hr/>\r\n                <div className=\"row w-100\">\r\n                    <div className=\"col-12 col-lg-6 m-auto\">\r\n                        <div className=\"card__style \">\r\n                            <div className=\"card w-100 m-auto\" style={{width: \"100%\"}}>\r\n                                <img src={ image.url } className=\"card-img-top m-auto mt-3\" alt=\"...\"/>\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">{ name }</h5>\r\n                                    <p className=\"card-text\">\r\n                                        Aliases: { \r\n                                            aliasesHero.map( alias => {\r\n                                                return <span key={alias}>\"{ alias }\", </span>\r\n                                            })\r\n                                        }\r\n                                    </p>\r\n                                </div>\r\n                                <ul className=\"list-group list-group-flush brightGrey\">\r\n                                    <li className=\"list-group-item brightGrey text-light\">Weight: {weightHero}</li>\r\n                                    <li className=\"list-group-item brightGrey text-light\">Height: {heightHero}</li>\r\n                                    <li className=\"list-group-item brightGrey text-light\">Eyes color: {eyesHero}</li>\r\n                                    <li className=\"list-group-item brightGrey text-light\">Hair color: { hairHero }</li>\r\n                                    <li className=\"list-group-item brightGrey text-light\">Localization: \"{ work.base }\"</li>\r\n                                </ul>\r\n                                <div className=\"card-body d-flex justify-content-between\">\r\n                                    <Link\r\n                                     className=\"btn btn-red-orange\"\r\n                                     to=\"/home\"\r\n                                     > \r\n                                        Back \r\n                                    </Link>\r\n                                    <Link \r\n                                     className=\"btn btn-outline-success\"\r\n                                     onClick={ handleAddHero }\r\n                                     to=\"/home\"\r\n                                    > \r\n                                        Add\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {  heroesAddTeam, removeHeroData, showHeroData } from '../../reducers/actions/heroes';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nexport const Card = ({ data, conditional, numberTeam }) => {\r\n    const [size, setSize] = useState(6)\r\n    const team = useSelector(state => state.heroes.teamHero);\r\n    const dispatch = useDispatch();\r\n    const {  name, image } = data;\r\n\r\n    const handleDispatch=()=>{\r\n       dispatch(showHeroData(data));\r\n    }\r\n    const handleAddHero = () => {\r\n        dispatch(heroesAddTeam(data, team))\r\n    }\r\n    const handleRemoveHero = () => {\r\n        dispatch(removeHeroData(data))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(numberTeam <= 2){\r\n            setSize(6)\r\n        }else if(numberTeam <= 3){\r\n            setSize(4)\r\n        }else{\r\n            setSize(2);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [numberTeam])\r\n\r\n    return (\r\n        <div className={`col-12 col-xl-${size} pb-4 m-auto`}>\r\n            <div className=\"card__style m-auto\">\r\n                <div className=\"card w-100\" style={{width: \"100%\"}}>\r\n                    <img src={ image.url } className=\"card-img-top m-auto mt-3\" alt={ name } />\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title mb-3\">{ name }</h5>\r\n                        <div className=\"card-body row\">\r\n                            <Link \r\n                             className=\"btn btn-red-orange m-auto\"\r\n                             onClick={ handleDispatch }\r\n                             to={`./hero/${name}`}\r\n                            >\r\n                                Look\r\n                            </Link>\r\n                            {\r\n                             (conditional)\r\n                                ? (<button className=\"btn btn-outline-success m-auto\" onClick={ handleAddHero }>Add</button>)\r\n                                : (<button className=\"btn btn-outline-danger m-auto\" onClick={ handleRemoveHero }> Remove</button>)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport { Card } from './Card';\r\n\r\nexport const MyCards = ({ heroes, conditional, lengthTeam = 6 }) => {\r\n    return (\r\n        <>\r\n            <div className=\"row w-100 p-4 m-auto\">\r\n                {\r\n                 heroes.map( (hero, index )=> {\r\n                    return <Card \r\n                             key={`${hero}${index}`} \r\n                             data={ hero } \r\n                             conditional={ conditional }\r\n                             numberTeam={lengthTeam}\r\n                            />\r\n                 })\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Formik } from 'formik';\r\nimport { MyCards } from '../cards/MyCards';\r\n\r\n\r\nexport const SearchScreen = () => {\r\n    const [heroesList, setHeroesList] = useState([]);\r\n \r\n    const handleInputChange = (e, handleChange, values) =>{\r\n        handleChange(e);\r\n        const { value } = values;\r\n        const searchName = value.toLowerCase()\r\n\r\n        try {\r\n            return axios.get( `https://superheroapi.com/api.php/117518734017873/search/${searchName}` )\r\n            .then(res => setHeroesList(res.data))\r\n            .catch(e => console.log(e));\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                searchText: '',\r\n            }}\r\n            validate={(values)=>{\r\n                let errors = {}\r\n                if(!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(values.searchText)){ \r\n                    errors.searchText= 'El nombre del héroe solo debe contener letras'\r\n                }\r\n                return errors;\r\n            }}\r\n        >\r\n            {({values, handleChange, errors })=>(\r\n                <div className=\"container\">\r\n                    <div className=\"row w-100\">\r\n                        <h1> Search</h1>\r\n                        <hr />\r\n                        <input \r\n                         autoComplete=\"off\"\r\n                         className=\"form-control form-control-lg bg-dark text-light mb-3\" \r\n                         type=\"text\" \r\n                         name=\"searchText\"\r\n                         id=\"searchText\"\r\n                         value={ values.searchText }\r\n                         placeholder=\"Search a hero\" \r\n                         aria-label=\".form-control-lg example\"\r\n                         onChange={ (e)=> handleInputChange( e, handleChange, e.target) }\r\n                        />\r\n                        {errors.searchText && <h4 className=\"fs-6 text-danger\">{errors.searchText}</h4>}\r\n                        <hr />\r\n                    </div>\r\n                    {\r\n                        (heroesList.response === 'success' && !errors.searchText) \r\n                            ?(<MyCards \r\n                                heroes={ heroesList.results }\r\n                                conditional={ true }\r\n                                />)\r\n                            :(<h4 className=\"fs-6 text-danger\">{heroesList.error}</h4>)\r\n                    }\r\n                </div>\r\n            )}\r\n            \r\n        </Formik>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { MyCards } from '../cards/MyCards';\r\nimport { stackStats } from '../helpers/stackStats';\r\n\r\nexport const TeamApp = () => {\r\n    const { teamHero } = useSelector(state => state.heroes)\r\n    const heroStats = stackStats(teamHero);\r\n\r\n    const inOrder = heroStats.sort((a, b) => {\r\n          if (a.value < b.value) {\r\n            return 1;\r\n          }\r\n          if (a.value > b.value) {\r\n            return -1;\r\n          }\r\n          return 0;\r\n        });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row w-100\">\r\n                <div className=\"col-6\">\r\n                    {\r\n                        inOrder.map( stat => {\r\n                            return <h5 className=\"text-orange\" key={ stat.type }> {stat.type}: {stat.value}</h5>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            <MyCards heroes={ teamHero } conditional={ false } lengthTeam={teamHero.length} />\r\n        </div>\r\n    );\r\n}\r\n","\r\n\r\nexport const stackStats = ( teamHero ) =>{\r\n    const reducer = (previousValue, currentValue) => parseInt(previousValue) + parseInt(currentValue);\r\n\r\n    const intelligence = teamHero.map( ({ powerstats }) => powerstats.intelligence ).reduce(reducer);\r\n    const combat = teamHero.map( ({ powerstats }) => powerstats.combat ).reduce(reducer);\r\n    const durability = teamHero.map( ({ powerstats }) => powerstats.durability ).reduce(reducer);\r\n    const power = teamHero.map( ({ powerstats }) => powerstats.power ).reduce(reducer);\r\n    const speed = teamHero.map( ({ powerstats }) => powerstats.intelligence ).reduce(reducer);\r\n    const strength = teamHero.map( ({ powerstats }) => powerstats.strength ).reduce(reducer);\r\n\r\n    const stackStats = [\r\n        { type: \"Intelligence\", value: intelligence },\r\n        { type: \"Combat\", value: combat },\r\n        { type: \"Durability\", value: durability },\r\n        { type: \"Power\", value: power },\r\n        { type: \"Speed\", value: speed },\r\n        { type: \"Strength\", value: strength },\r\n    ]\r\n\r\n    return stackStats\r\n\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { NavApp } from \"../ui/NavApp\";\r\nimport { SearchScreen } from \"../ui/SearchScreen\";\r\nimport { TeamApp } from \"./TeamApp\";\r\n\r\nexport const HomeScreen = () => {\r\n    const { teamHero } = useSelector(state => state.heroes)\r\n    \r\n    return (\r\n        <>\r\n            <NavApp />\r\n            <hr/>\r\n            {(teamHero[0] === undefined)\r\n                ? (<div className=\"container text-orange m-auto fs-1\">\r\n                    Haven't team yet! <br />\r\n                    <i className=\"fas fa-frown text-orange\"></i>\r\n                    </div>)\r\n                : (<TeamApp />)\r\n            }\r\n            <hr/>\r\n            <SearchScreen />\r\n        </>\r\n    );\r\n}","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport { HeroScreen } from \"../components/cards/HeroScreen\";\r\nimport { HomeScreen } from \"../components/home/HomeScreen\";\r\n\r\nexport const DashboardApp = () => {\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"screen darkGrey\">\r\n                <Switch>\r\n                    <Route exact path=\"/home\" component={HomeScreen} />\r\n                    <Route exact path=\"/hero/:heroName\" component={HeroScreen} />\r\n                    <Redirect to=\"/home\" component={HomeScreen} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuth,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) =>(\r\n                (isAuth)\r\n                    ?( <Component {...props} /> )\r\n                    :( <Redirect to=\"/auth\" /> )\r\n            )}/>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PublicRoute = ({\r\n    isAuth,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) =>(\r\n                (!isAuth)\r\n                    ?( <Component {...props} /> )\r\n                    :( <Redirect to=\"/\" /> )\r\n            )}/>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { DashboardApp } from \"./DashboardApp\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n    const { logged } = useSelector(state => state.auth)\r\n    return (\r\n        <Router basename=\"/heroesapp\">\r\n            <div className=\"body\">\r\n                <Switch>\r\n                    <PublicRoute path=\"/auth\" component={LoginScreen} isAuth={ logged }/>\r\n                    <PrivateRoute path=\"/\" component={DashboardApp} isAuth={ logged } />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from '../store/store';\r\nimport { AppRouter } from '../routers/AppRouter';\r\nimport '../styles/styles.scss'\r\n\r\nexport const HeroesApp = () => {\r\n    return (\r\n        <Provider store={ store } >\r\n            <AppRouter />\r\n        </Provider>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport {HeroesApp} from './components/HeroesApp.js'\r\n\r\nReactDOM.render(\r\n  <HeroesApp /> ,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}